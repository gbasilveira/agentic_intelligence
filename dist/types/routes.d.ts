// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/ai-agents" | "/ai-agents/[slug]" | "/auth/forgot-password" | "/auth/login" | "/auth/logout" | "/auth/signup" | "/blog" | "/blog/[slug]" | "/community" | "/community/members" | "/community/members/[id]" | "/community/partners" | "/community/partners/[id]" | "/community/projects" | "/community/projects/[id]" | "/events" | "/events/[slug]" | "/events/propose" | "/privacy-policy" | "/profile" | "/resources" | "/terms-of-service"
type PageRoutes = never
type LayoutRoutes = "/" | "/blog/[slug]"
type RedirectRoutes = never
type RewriteRoutes = "/api/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/ai-agents": {}
  "/ai-agents/[slug]": { "slug": string; }
  "/api/[[...path]]": { "path"?: string[]; }
  "/auth/forgot-password": {}
  "/auth/login": {}
  "/auth/logout": {}
  "/auth/signup": {}
  "/blog": {}
  "/blog/[slug]": { "slug": string; }
  "/community": {}
  "/community/members": {}
  "/community/members/[id]": { "id": string; }
  "/community/partners": {}
  "/community/partners/[id]": { "id": string; }
  "/community/projects": {}
  "/community/projects/[id]": { "id": string; }
  "/events": {}
  "/events/[slug]": { "slug": string; }
  "/events/propose": {}
  "/privacy-policy": {}
  "/profile": {}
  "/resources": {}
  "/terms-of-service": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/blog/[slug]": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
