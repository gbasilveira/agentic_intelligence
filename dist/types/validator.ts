// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/ai-agents/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ai-agents/[slug]">> = Specific
  const handler = {} as typeof import("../../app/ai-agents/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/ai-agents/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ai-agents">> = Specific
  const handler = {} as typeof import("../../app/ai-agents/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/forgot-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/forgot-password">> = Specific
  const handler = {} as typeof import("../../app/auth/forgot-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/login">> = Specific
  const handler = {} as typeof import("../../app/auth/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/logout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/logout">> = Specific
  const handler = {} as typeof import("../../app/auth/logout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/signup">> = Specific
  const handler = {} as typeof import("../../app/auth/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/blog/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/blog/[slug]">> = Specific
  const handler = {} as typeof import("../../app/blog/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/blog/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/blog">> = Specific
  const handler = {} as typeof import("../../app/blog/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/community/members/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/community/members/[id]">> = Specific
  const handler = {} as typeof import("../../app/community/members/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/community/members/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/community/members">> = Specific
  const handler = {} as typeof import("../../app/community/members/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/community/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/community">> = Specific
  const handler = {} as typeof import("../../app/community/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/community/partners/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/community/partners/[id]">> = Specific
  const handler = {} as typeof import("../../app/community/partners/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/community/partners/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/community/partners">> = Specific
  const handler = {} as typeof import("../../app/community/partners/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/community/projects/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/community/projects/[id]">> = Specific
  const handler = {} as typeof import("../../app/community/projects/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/community/projects/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/community/projects">> = Specific
  const handler = {} as typeof import("../../app/community/projects/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/events/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/events/[slug]">> = Specific
  const handler = {} as typeof import("../../app/events/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/events/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/events">> = Specific
  const handler = {} as typeof import("../../app/events/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/events/propose/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/events/propose">> = Specific
  const handler = {} as typeof import("../../app/events/propose/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy-policy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy-policy">> = Specific
  const handler = {} as typeof import("../../app/privacy-policy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile">> = Specific
  const handler = {} as typeof import("../../app/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/resources/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/resources">> = Specific
  const handler = {} as typeof import("../../app/resources/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms-of-service/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms-of-service">> = Specific
  const handler = {} as typeof import("../../app/terms-of-service/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../app/blog/[slug]/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/blog/[slug]">> = Specific
  const handler = {} as typeof import("../../app/blog/[slug]/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
